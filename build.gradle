
plugins {
    id "de.undercouch.download" version "1.2"
    id "nebula.os-package" version "2.2.6"
}

repositories {
    mavenCentral()
}

import de.undercouch.gradle.tasks.download.Download

group 'com.sdavids'
version '0.1'

project.ext.solrVersion = project.hasProperty('solrVersion') ? project.getProperty('solrVersion') : '5.2.1'
project.ext.solrInstallDir = "/opt/solr"
project.ext.solrVarDir = '/var/solr'
project.ext.solrHome = "${solrVarDir}/data"
project.ext.solrLogsDir = "${solrVarDir}/logs"

project.ext.solrExtractLocation = "${buildDir}/solr-${solrVersion}"

task downloadSolr(type: Download) {
    src "http://archive.apache.org/dist/lucene/solr/${solrVersion}/solr-${solrVersion}.tgz"
    dest new File(buildDir, "solr-${solrVersion}.tgz")
    onlyIfNewer true
}

task downloadAndExtractSolr(dependsOn: downloadSolr, type: Copy) {
    from tarTree(downloadSolr.dest)
    into buildDir
}

ospackage {
    packageName = 'solr'
    summary = 'Solr Search Engine'
    packageDescription = 'Solr is the popular, blazing-fast, open source enterprise search platform built on Apache Lucene.'
    vendor = 'Apache Software Foundation (ASF)'
    url = 'http://lucene.apache.org/solr/'
    license = 'Apache License, Version 2.0'
    version = solrVersion
    os = LINUX

    user = 'solr'
    permissionGroup = 'solr'

    postUninstall file('scripts/cleanSolrWebapp.sh')

    directory(solrLogsDir, 644)

    from (solrExtractLocation) {
        exclude(['dist/**', 'example/**', 'docs/**'])
        into solrInstallDir
    }

    from("${solrExtractLocation}/bin/init.d/solr") {
        into '/etc/init.d'
        fileMode 0755
        user 'root'
        permissionGroup 'root'
    }

    from("${solrExtractLocation}/bin/solr.in.sh") {
        filter { line ->
            switch (line) {
                case ~/^#?SOLR_HOME=.*/:
                    return "SOLR_HOME=${solrHome}"
                case ~/^#?LOG4J_PROPS=.*/:
                    return "LOG4J_PROPS=${solrVarDir}/log4j.properties"
                case ~/^#?SOLR_LOGS_DIR=.*/:
                    return "SOLR_LOGS_DIR=${solrLogsDir}"
                default:
                    return line
            }
        }
        into solrVarDir
        fileType CONFIG | NOREPLACE
        fileMode 0755
    }

    from("${solrExtractLocation}/server/resources/log4j.properties") {
        filter { line -> line.replaceAll("^solr.log=.*", "solr.log=${solrLogsDir}") }
        into solrVarDir
        fileType CONFIG | NOREPLACE
    }

    from("${solrExtractLocation}/server/solr/solr.xml") {
        into solrHome
        fileType CONFIG | NOREPLACE
    }

}

buildRpm {
    preInstall file('scripts/rpm/createSolrUser.sh')
}

buildDeb {
    preInstall file('scripts/deb/createSolrUser.sh')
}

buildRpm.dependsOn downloadAndExtractSolr
buildDeb.dependsOn downloadAndExtractSolr

task wrapper(type: Wrapper) {
    gradleVersion = '2.4'
}
